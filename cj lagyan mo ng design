using System;
using System.Net.Http.Headers;

namespace HotelBookingProgram
{
    class Program
    {
        static Dictionary<string, string> accounts = new Dictionary<string, string>();
        static int currentpage = 0;
        static void Main(string[] args)
        {
            char retry;
            do
            {
                homepage();

                Console.Write("What do you want to do: ");
                int homechoice = int.Parse(Console.ReadLine());

                switch (homechoice)
                {
                    case 1:
                    LoginProcess();
                    break;
                    case 2: 
                    Login();
                    break;
                }

                homepage();

                Console.Write("What do you want to do: ");
                int homechoice1 = int.Parse(Console.ReadLine());

                switch (homechoice1)
                {
                    case 1:
                    LoginProcess();
                    break;
                    case 2: 
                    Login();
                    break;
                }

                
                Console.ReadLine(); // To prevent the console from closing immediately

            
                Console.Clear();
                Console.ForegroundColor = ConsoleColor.Yellow;

                Console.WriteLine("*************************************************");
                Console.WriteLine("*                                               *");
                Console.WriteLine("*      Welcome to Morada Grand Royal Hotel!     *");
                Console.WriteLine("*                                               *");
                Console.WriteLine("*************************************************");
                Console.ResetColor();

                string? name, age , address , contactNumber , emailAddress ;
                int residents;

                Console.Write("Please enter your name: ");
                name = Console.ReadLine();

                Console.Write("Please enter your age: ");
                age = Console.ReadLine();

                Console.Write("Please enter your address: ");
                address = Console.ReadLine();

                Console.Write("Please enter your contact number: ");
                contactNumber = Console.ReadLine();

                Console.Write("Please enter your email address: ");
                emailAddress = Console.ReadLine();
                
                Console.Write("How many residents will be staying: ");
                residents = int.Parse(Console.ReadLine());

            
            // ex


                Console.Clear();

                Console.WriteLine();
                Console.WriteLine("These are our branches inside Laguna");
                Console.WriteLine();
                Console.WriteLine("Codes\t        Branch Names");
                Console.WriteLine("------------\t-------------");
                Console.WriteLine("SR\t\tSta. Rosa");
                Console.WriteLine("BAE\t\tBae");
                Console.WriteLine("SC\t\tSta. Cruz");
                Console.WriteLine("SP\t\tSan Pablo");
                Console.WriteLine("LB\t\tLos Banos");

                // EX

                bool validBranch = false; 

                string branch;

                do 
                {

                Console.Write("To choose your designated branch, just enter it's code : ");
                branch = Console.ReadLine().ToUpper();
        

                switch (branch)
                {
                case "SR":
                    Console.WriteLine("You selected Sta. Rosa.");
                    validBranch = true ;
                    break;
                case "BAE":
                    Console.WriteLine("You selected Bae.");
                    validBranch = true ;
                    break;
                case "SC":
                    Console.WriteLine("You selected Sta. Cruz.");
                    validBranch = true ;
                    break;
                case "SP":
                    Console.WriteLine("You selected San Pablo.");
                    validBranch = true ;
                    break;
                case "LB":
                    Console.WriteLine("You selected Los Banos.");
                    validBranch = true ;
                    break;
                default:
                    Console.WriteLine("Wrong code, please only enter the available code");
                    break;

                }

                } 
                while (!validBranch);

    
            
                // ex

                Console.Clear();

                int SS = 500 , MS = 800 , BS = 1000 , HS = 1500 , PS = 2000 ;

                bool exitrequest = false;

                do
                {
                    switch (currentpage)
                    {
                        case 0: desc1();
                        break;
                        case 1: desc2();
                        break;
                        case 2: desc3();
                        break;
                        case 3: desc4();
                        break;
                        case 4: desc5();
                        break;
                        case 5:
                        lastpage();
                        currentpage = (currentpage - 1);
                        break;
                    }
                    int choice = int.Parse(Console.ReadLine());

                    switch (choice)
                    {
                        case 1:
                            currentpage = (currentpage + 1);
                            break;
                        case 2:
                            currentpage = (currentpage - 1);
                            break;
                        case 3:
                            exitrequest = true;
                            break;
                        case 4:
                            Console.WriteLine("Invalid choice. Please try again.");
                            break;
                    }
                }while (!exitrequest);
     
                Console.Clear();
                Console.WriteLine(" SS = Standard Suites \n MS = Mini Suite \n BS = Bridal Suites \n HS = Honeymoon Suite \n PS = Presidential Suite ");
                
                bool validroom = false;







                string? room;
                int costperday = 0 ;
                do
                {
                Console.WriteLine("******************************************");
                Console.WriteLine("*           Guests and Rooms             *");
                Console.WriteLine("******************************************");
                Console.Write("Enter the code of the room that you choose: ");
                room = Console.ReadLine().ToUpper();

            
                switch (room)
                {
                case "SS":
                    Console.WriteLine("You selected Standard Suite");
                    costperday = SS ;
                    validroom = true;
                    break;
                case "MS":
                    Console.WriteLine("You selected Mini Suite.");
                    costperday = MS ;
                    validroom = true;
                    break;
                case "BS":
                    Console.WriteLine("You selected Bridal Suites.");
                    costperday = BS ;
                    validroom = true;
                    break;
                case "HS":
                    Console.WriteLine("You selected Honeymoon Suite.");
                    costperday = HS ;
                    validroom = true;
                    break;
                case "PS":
                    Console.WriteLine("You selected Presidential Suite.");
                    costperday = PS ;
                    validroom = true;
                    break;
                default:
                    Console.WriteLine("Wrong code, please only enter the available code");
                    break;

                }
                }
                while (!validroom);

                // mmsad

                Console.Clear();

                Console.Write($"The selected room {room} has 5 available rooms.");

                int selectedRoom = 0;
                bool isValidRoom = false;

                while (!isValidRoom)
                    {
                    Console.WriteLine("Choose a room number from 1-5:");
                    string input = Console.ReadLine();

                    if (int.TryParse(input, out selectedRoom))
                        {
                            if (selectedRoom >= 1 && selectedRoom <= 5)
                                {
                                    isValidRoom = true;
                                }
                            else
                                {
                                Console.Write("Invalid input. Please choose a room number from 1-5: ");
                                }
                        }
                    else
                        {
                            Console.Write("Invalid input. Please enter a numeric value: ");
                        }
                    }

                Console.WriteLine($"You selected room {selectedRoom} of {room}.");





            // asd




                Console.Clear();

                Console.WriteLine("How many days would you like to stay?");
                int chosenDate = int.Parse(Console.ReadLine());


            

                int total = residents * (chosenDate * costperday) ;

                Console.WriteLine($"The total cost for {room} with {chosenDate} number of days and {residents} residents is : P" + total);

            

                string paymentmeth = paymentMethod();

                if (paymentmeth == "Card")
                {
                    Cardpayment(total);
                } 
                else if (paymentmeth == "Gcash"){
                    gcashpayment(total);
                }
                else if (paymentmeth == "Paypal"){
                    Paypalpayment(total);
                }

                // Display user inputs
                Console.Clear();
                
                Console.WriteLine("Your book to Bigtas Hotel is accepted! \nBooking Details :");
                Console.WriteLine("Name: " + name);
                Console.WriteLine("Laguna Branch: " + branch);
                Console.WriteLine("Days to stay: " + chosenDate);
                Console.WriteLine("Room Choice: " + room + selectedRoom);
                Console.WriteLine("Residents: " + residents);
                Console.WriteLine("Total Cost: " + total);
                Console.WriteLine("Payment method: " + paymentmeth);
                
                

                Console.Write("Do you want to book another room? (y/n): ");
                retry = char.Parse(Console.ReadLine());
            }while(retry == 'y');

        if (retry != 'n');
        {
            showguidelines();
        }
            
        }
        static string paymentMethod()
        {
            Console.Clear();
            
            Console.WriteLine("1. Card");
            Console.WriteLine("2. Gcash");
            Console.WriteLine("3. Paypal");

            Console.Write("Select Payment Method: ");

            int choice = int.Parse(Console.ReadLine());
            do {
                Console.Write("Enter the number of your payment method choice: ");
            }
            while (choice < 1 || choice > 3);

            switch (choice)
            { 
                case 1:
                    return "Card";
                case 2: 
                    return "Gcash";
                case 3:
                    return "Paypal";
                default:
                    return string.Empty;
            }
        }
        
        static void Cardpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details: ");
            Console.Write("Enter your credit card number: ");
            string creditcardnumber = Console.ReadLine();

            Console.Write("Enter the expiration date YY/MM: ");
            string expdate = Console.ReadLine();

            Console.Write("Enter CVV: ");
            string cvv = Console.ReadLine();

            Console.WriteLine($"Credit Card successful! Total amount charged: ${total:F2}\n");
            Console.ReadKey();
        }

        static void Paypalpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details:");
            Console.Write("Enter your PayPal email address: ");
            string paypalEmail = Console.ReadLine();

            Console.WriteLine($"PayPal Payment successful! Total amount charged: ${total:F2}\n");
            Console.ReadKey();
        }

        static void gcashpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details:");
            Console.Write("Enter your name: ");
            Console.Write("\nEnter your GCash mobile number: ");
            string gcashNumber = Console.ReadLine();

            Console.WriteLine($"GCash Payment successful! Total amount charged: ${total:F2}\n");
            Console.ReadKey();
        }

    static void showguidelines()
        {
            Console.Clear();

            Console.WriteLine("\nHere are some guidelines to make your stay enjoyable:");
            Console.WriteLine("\n- Check-in time is ating ang gabing itoooo");
            Console.WriteLine("- Pets are not allowed in the rooms.");
            Console.WriteLine("- Smoking is prohibited in all indoor areas.");
            Console.WriteLine("- Room service is available 24/7.");
            Console.WriteLine("- To call for Room service press the dedicated button on the telephone labeled Room Service");
            Console.WriteLine("- In case of any emergency, dial 911.");

            Console.WriteLine("\nThank you for choosing Morada Grand Royal Hotel, have a nice stay!\n");
        }

    static void desc1()
        {
            Console.Clear();
             Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Room Type                *");
                Console.WriteLine("******************************************");
            Console.WriteLine("Here are our offers : \nSS1, SS2, SS3, SS4, SS5 \n Standard Suites (500 php per head for 24hrs)");
            Console.WriteLine("It includes : A living area, A bedroom with queen-sized bed, A bathroom with a shower");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Next Page");
        }

    static void desc2()
        {
            Console.Clear();
             Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Room Type                *");
                Console.WriteLine("******************************************");
            Console.WriteLine("MS1, MS2, MS3, MS4, MS5 \nMini Suite (800 php per head for 24hrs)");
            Console.WriteLine("Separate living area, A bedroom with king-sized bed, A spacious bathroom with a bathtub and shower, Work desk, High-speed internet, Flat screen TV");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Next Page");
            Console.WriteLine("2. Previous Page");
                
        }

    static void desc3()
        {
            Console.Clear();
             Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Room Type                *");
                Console.WriteLine("******************************************");
            Console.WriteLine("BS1, BS2, BS3, BS4, BS5 \nBridal Suites (1000 php per head for 24hrs)");
            Console.WriteLine("Romantic ambiance with a king-sized bed, A spacious bathroom with a Jacuzzi tub, A separate living area, Champagne, Chocolates, Other romantic touches");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Next Page");
            Console.WriteLine("2. Previous Page");
        }

    static void desc4()
        {
            Console.Clear();
             Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Room Type                *");
                Console.WriteLine("******************************************");
            Console.WriteLine("HS1, HS2, HS3, HS4, HS5 \nHoneymoon Suite (1500 php per head for 24hrs)");
            Console.WriteLine("Four-poster bed, A private balcony with a view, A spacious bathroom with a Jacuzzi tub, Bottle of champagne, Rose petals, Other romantic amenities");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Next Page");
            Console.WriteLine("2. Previous Page");
        }

    static void desc5()
        {
            Console.Clear();
             Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Room Type                *");
                Console.WriteLine("******************************************");
            Console.WriteLine("PS1, PS2, PS3, PS4, PS5 \nPresidential Suite (2000 php per head for 24hrs)");
            Console.WriteLine("A separate living area, A dining area, A bedroom with a king-sized bed, A spacious bathroom with a Jacuzzi tub, Private balcony with a view, A fully equipped kitchen, A butler service");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("2. Previous Page");
            Console.WriteLine("3. Continue to Select Room Type");
        }

    static void lastpage()
        {
            Console.Write("This is the last page: ");
        }

    static void Login()
    {
        Console.WriteLine("Welcome! Let's create an account.");

        Console.WriteLine("Please enter a new username:");
        string newUsername = Console.ReadLine();

        while (string.IsNullOrEmpty(newUsername)) // Ensures the username is not empty
        {
            Console.WriteLine("Username cannot be empty. Please enter a valid username:");
            newUsername = Console.ReadLine();
        }

        Console.WriteLine("Please enter a password:");
        string newPassword = Console.ReadLine();

        while (string.IsNullOrEmpty(newPassword)) // Ensures the password is not empty
        {
            Console.WriteLine("Password cannot be empty. Please enter a valid password:");
            newPassword = Console.ReadLine();
        }

        AddAccount(newUsername, newPassword);

        Console.WriteLine("Account created successfully!");

        // Login using the newly created account
        
    }

    static void AddAccount(string username, string password)
    {
        if (!accounts.ContainsKey(username))
        {
            accounts.Add(username, password);
        }
        else
        {
            Console.WriteLine("Account already exists. Please choose a different username.");
        }
    }

    static void LoginProcess()
    {
        Console.WriteLine("\nPlease login to your account.");

        Console.WriteLine("Enter your username:");
        string enteredUsername = Console.ReadLine();

        Console.WriteLine("Enter your password:");
        string enteredPassword = Console.ReadLine();

        if (Login(enteredUsername, enteredPassword))
        {
            Console.WriteLine("Login successful!");
            // Add your logic here for what happens after successful login
        }
        else
        {
            Console.WriteLine("Invalid username or password. Please try again.");
        }
        }

    static bool Login(string username, string password)
        {
            return accounts.ContainsKey(username) && accounts[username] == password;
        }

    static void homepage()
        {
            Console.Clear();
                Console.ForegroundColor = ConsoleColor.Yellow;

                Console.WriteLine("*************************************************");
                Console.WriteLine("*                                               *");
                Console.WriteLine("*           Welcome to Bigtas Hotel!            *");
                Console.WriteLine("*                                               *");
                Console.WriteLine("*************************************************");
                Console.ResetColor();

            Console.WriteLine("How can we help you?");

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Login");
            Console.WriteLine("2. Sign Up");

    static void checkin ()
    {
        Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Date of Stay             *");
                Console.WriteLine("******************************************");

                Console.Write("Enter the start date (yyyy-MM-dd): ");
                DateTime startDate = GetValidDateInput();

                Console.Write("Enter the end date (yyyy-MM-dd): ");
                DateTime endDate = GetValidDateInput();

                int daysDifference = (int)(endDate - startDate).TotalDays;
                Console.WriteLine($"You will be staying for {daysDifference} days.");
    }
     static DateTime GetValidDateInput()
        {
            DateTime date;
            string input;

            do
            {
                Console.Write("Enter a valid date (yyyy-MM-dd): ");
                input = Console.ReadLine();

                if (!DateTime.TryParseExact(input, "yyyy-MM-dd", null, System.Globalization.DateTimeStyles.None, out date))
                {
                    Console.WriteLine("Invalid input. Please enter a valid date in the format yyyy-MM-dd.");
                }

            } while (date == DateTime.MinValue);

            return date;
        }
    }
    }
}

        
    


    



        //  check in ,check out date
        //  cthild and adul rates
        //  room limits
        //  gagawing arrays
        //  
        
